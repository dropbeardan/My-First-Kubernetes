kind: Service
apiVersion: v1
metadata:
  name: ${SERVICE_NAME}
spec:
  selector:
    app: ${SERVICE_NAME} # Targets 1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080 # Targets 2
  type: LoadBalancer
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ${SERVICE_NAME}
  labels:
    app: ${SERVICE_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME} # 1
    spec:
      volumes: # Can only use one of these bad bois
        - name: cloudsql-secrets # 3
          secret:
            secretName: cloudsql-instance-credentials-3
      containers:
        - name: ${SERVICE_NAME}
          image: gcr.io/${GOOGLE_PROJECT_ID}/${SERVICE_NAME}:${CIRCLE_SHA1}
          env:
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: dbname
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
          ports:
            - name: http
              containerPort: 8080 # 2
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 30
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy
          command:
            [
              '/cloud_sql_proxy',
              '-instances=my-first-kube-233907:australia-southeast1:postgresql-test-1=tcp:5432',
              '-credential_file=/secrets/cloudsql/cloudsql.json',
            ]
          volumeMounts:
            - name: cloudsql-secrets # Targets #3
              mountPath: /secrets/cloudsql
              readOnly: true
  strategy:
    type: RollingUpdate # Already default
